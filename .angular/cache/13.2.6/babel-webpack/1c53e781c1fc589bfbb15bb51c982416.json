{"ast":null,"code":"import _asyncToGenerator from \"/home/sparkout/Desktop/Hari/Sparkout/Angular/Angular_ZUKI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString } from \"@walletconnect/utils\";\nimport NetworkMonitor from \"./network\";\nconst WS = typeof global.WebSocket !== \"undefined\" ? global.WebSocket : require(\"ws\");\n\nclass SocketTransport {\n  constructor(opts) {\n    this.opts = opts;\n    this._queue = [];\n    this._events = [];\n    this._subscriptions = [];\n    this._protocol = opts.protocol;\n    this._version = opts.version;\n    this._url = \"\";\n    this._netMonitor = null;\n    this._socket = null;\n    this._nextSocket = null;\n    this._subscriptions = opts.subscriptions || [];\n    this._netMonitor = opts.netMonitor || new NetworkMonitor();\n\n    if (!opts.url || typeof opts.url !== \"string\") {\n      throw new Error(\"Missing or invalid WebSocket url\");\n    }\n\n    this._url = opts.url;\n\n    this._netMonitor.on(\"online\", () => this._socketCreate());\n  }\n\n  set readyState(value) {}\n\n  get readyState() {\n    return this._socket ? this._socket.readyState : -1;\n  }\n\n  set connecting(value) {}\n\n  get connecting() {\n    return this.readyState === 0;\n  }\n\n  set connected(value) {}\n\n  get connected() {\n    return this.readyState === 1;\n  }\n\n  set closing(value) {}\n\n  get closing() {\n    return this.readyState === 2;\n  }\n\n  set closed(value) {}\n\n  get closed() {\n    return this.readyState === 3;\n  }\n\n  open() {\n    this._socketCreate();\n  }\n\n  close() {\n    this._socketClose();\n  }\n\n  send(message, topic, silent) {\n    if (!topic || typeof topic !== \"string\") {\n      throw new Error(\"Missing or invalid topic field\");\n    }\n\n    this._socketSend({\n      topic: topic,\n      type: \"pub\",\n      payload: message,\n      silent: !!silent\n    });\n  }\n\n  subscribe(topic) {\n    this._socketSend({\n      topic: topic,\n      type: \"sub\",\n      payload: \"\",\n      silent: true\n    });\n  }\n\n  on(event, callback) {\n    this._events.push({\n      event,\n      callback\n    });\n  }\n\n  _socketCreate() {\n    if (this._nextSocket) {\n      return;\n    }\n\n    const url = getWebSocketUrl(this._url, this._protocol, this._version);\n    this._nextSocket = new WS(url);\n\n    if (!this._nextSocket) {\n      throw new Error(\"Failed to create socket\");\n    }\n\n    this._nextSocket.onmessage = event => this._socketReceive(event);\n\n    this._nextSocket.onopen = () => this._socketOpen();\n\n    this._nextSocket.onerror = event => this._socketError(event);\n\n    this._nextSocket.onclose = () => {\n      setTimeout(() => {\n        this._nextSocket = null;\n\n        this._socketCreate();\n      }, 1000);\n    };\n  }\n\n  _socketOpen() {\n    this._socketClose();\n\n    this._socket = this._nextSocket;\n    this._nextSocket = null;\n\n    this._queueSubscriptions();\n\n    this._pushQueue();\n  }\n\n  _socketClose() {\n    if (this._socket) {\n      this._socket.onclose = () => {};\n\n      this._socket.close();\n    }\n  }\n\n  _socketSend(socketMessage) {\n    const message = JSON.stringify(socketMessage);\n\n    if (this._socket && this._socket.readyState === 1) {\n      this._socket.send(message);\n    } else {\n      this._setToQueue(socketMessage);\n\n      this._socketCreate();\n    }\n  }\n\n  _socketReceive(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let socketMessage;\n\n      try {\n        socketMessage = JSON.parse(event.data);\n      } catch (error) {\n        return;\n      }\n\n      _this._socketSend({\n        topic: socketMessage.topic,\n        type: \"ack\",\n        payload: \"\",\n        silent: true\n      });\n\n      if (_this._socket && _this._socket.readyState === 1) {\n        const events = _this._events.filter(event => event.event === \"message\");\n\n        if (events && events.length) {\n          events.forEach(event => event.callback(socketMessage));\n        }\n      }\n    })();\n  }\n\n  _socketError(e) {\n    const events = this._events.filter(event => event.event === \"error\");\n\n    if (events && events.length) {\n      events.forEach(event => event.callback(e));\n    }\n  }\n\n  _queueSubscriptions() {\n    const subscriptions = this._subscriptions;\n    subscriptions.forEach(topic => this._queue.push({\n      topic: topic,\n      type: \"sub\",\n      payload: \"\",\n      silent: true\n    }));\n    this._subscriptions = this.opts.subscriptions || [];\n  }\n\n  _setToQueue(socketMessage) {\n    this._queue.push(socketMessage);\n  }\n\n  _pushQueue() {\n    const queue = this._queue;\n    queue.forEach(socketMessage => this._socketSend(socketMessage));\n    this._queue = [];\n  }\n\n}\n\nfunction getWebSocketUrl(_url, protocol, version) {\n  var _a, _b;\n\n  const url = _url.startsWith(\"https\") ? _url.replace(\"https\", \"wss\") : _url.startsWith(\"http\") ? _url.replace(\"http\", \"ws\") : _url;\n  const splitUrl = url.split(\"?\");\n  const params = isBrowser() ? {\n    protocol,\n    version,\n    env: \"browser\",\n    host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || \"\"\n  } : {\n    protocol,\n    version,\n    env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || \"\"\n  };\n  const queryString = appendToQueryString(getQueryString(splitUrl[1] || \"\"), params);\n  return splitUrl[0] + \"?\" + queryString;\n}\n\nexport default SocketTransport;","map":{"version":3,"sources":["/home/sparkout/Desktop/Hari/Sparkout/Angular/Angular_ZUKI/node_modules/@walletconnect/socket-transport/dist/esm/index.js"],"names":["isBrowser","getLocation","getQueryString","detectEnv","appendToQueryString","NetworkMonitor","WS","global","WebSocket","require","SocketTransport","constructor","opts","_queue","_events","_subscriptions","_protocol","protocol","_version","version","_url","_netMonitor","_socket","_nextSocket","subscriptions","netMonitor","url","Error","on","_socketCreate","readyState","value","connecting","connected","closing","closed","open","close","_socketClose","send","message","topic","silent","_socketSend","type","payload","subscribe","event","callback","push","getWebSocketUrl","onmessage","_socketReceive","onopen","_socketOpen","onerror","_socketError","onclose","setTimeout","_queueSubscriptions","_pushQueue","socketMessage","JSON","stringify","_setToQueue","parse","data","error","events","filter","length","forEach","e","queue","_a","_b","startsWith","replace","splitUrl","split","params","env","host","name","queryString"],"mappings":"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","sourcesContent":["import { isBrowser, getLocation, getQueryString, detectEnv, appendToQueryString, } from \"@walletconnect/utils\";\nimport NetworkMonitor from \"./network\";\nconst WS = typeof global.WebSocket !== \"undefined\" ? global.WebSocket : require(\"ws\");\nclass SocketTransport {\n    constructor(opts) {\n        this.opts = opts;\n        this._queue = [];\n        this._events = [];\n        this._subscriptions = [];\n        this._protocol = opts.protocol;\n        this._version = opts.version;\n        this._url = \"\";\n        this._netMonitor = null;\n        this._socket = null;\n        this._nextSocket = null;\n        this._subscriptions = opts.subscriptions || [];\n        this._netMonitor = opts.netMonitor || new NetworkMonitor();\n        if (!opts.url || typeof opts.url !== \"string\") {\n            throw new Error(\"Missing or invalid WebSocket url\");\n        }\n        this._url = opts.url;\n        this._netMonitor.on(\"online\", () => this._socketCreate());\n    }\n    set readyState(value) {\n    }\n    get readyState() {\n        return this._socket ? this._socket.readyState : -1;\n    }\n    set connecting(value) {\n    }\n    get connecting() {\n        return this.readyState === 0;\n    }\n    set connected(value) {\n    }\n    get connected() {\n        return this.readyState === 1;\n    }\n    set closing(value) {\n    }\n    get closing() {\n        return this.readyState === 2;\n    }\n    set closed(value) {\n    }\n    get closed() {\n        return this.readyState === 3;\n    }\n    open() {\n        this._socketCreate();\n    }\n    close() {\n        this._socketClose();\n    }\n    send(message, topic, silent) {\n        if (!topic || typeof topic !== \"string\") {\n            throw new Error(\"Missing or invalid topic field\");\n        }\n        this._socketSend({\n            topic: topic,\n            type: \"pub\",\n            payload: message,\n            silent: !!silent,\n        });\n    }\n    subscribe(topic) {\n        this._socketSend({\n            topic: topic,\n            type: \"sub\",\n            payload: \"\",\n            silent: true,\n        });\n    }\n    on(event, callback) {\n        this._events.push({ event, callback });\n    }\n    _socketCreate() {\n        if (this._nextSocket) {\n            return;\n        }\n        const url = getWebSocketUrl(this._url, this._protocol, this._version);\n        this._nextSocket = new WS(url);\n        if (!this._nextSocket) {\n            throw new Error(\"Failed to create socket\");\n        }\n        this._nextSocket.onmessage = (event) => this._socketReceive(event);\n        this._nextSocket.onopen = () => this._socketOpen();\n        this._nextSocket.onerror = (event) => this._socketError(event);\n        this._nextSocket.onclose = () => {\n            setTimeout(() => {\n                this._nextSocket = null;\n                this._socketCreate();\n            }, 1000);\n        };\n    }\n    _socketOpen() {\n        this._socketClose();\n        this._socket = this._nextSocket;\n        this._nextSocket = null;\n        this._queueSubscriptions();\n        this._pushQueue();\n    }\n    _socketClose() {\n        if (this._socket) {\n            this._socket.onclose = () => {\n            };\n            this._socket.close();\n        }\n    }\n    _socketSend(socketMessage) {\n        const message = JSON.stringify(socketMessage);\n        if (this._socket && this._socket.readyState === 1) {\n            this._socket.send(message);\n        }\n        else {\n            this._setToQueue(socketMessage);\n            this._socketCreate();\n        }\n    }\n    async _socketReceive(event) {\n        let socketMessage;\n        try {\n            socketMessage = JSON.parse(event.data);\n        }\n        catch (error) {\n            return;\n        }\n        this._socketSend({\n            topic: socketMessage.topic,\n            type: \"ack\",\n            payload: \"\",\n            silent: true,\n        });\n        if (this._socket && this._socket.readyState === 1) {\n            const events = this._events.filter(event => event.event === \"message\");\n            if (events && events.length) {\n                events.forEach(event => event.callback(socketMessage));\n            }\n        }\n    }\n    _socketError(e) {\n        const events = this._events.filter(event => event.event === \"error\");\n        if (events && events.length) {\n            events.forEach(event => event.callback(e));\n        }\n    }\n    _queueSubscriptions() {\n        const subscriptions = this._subscriptions;\n        subscriptions.forEach((topic) => this._queue.push({\n            topic: topic,\n            type: \"sub\",\n            payload: \"\",\n            silent: true,\n        }));\n        this._subscriptions = this.opts.subscriptions || [];\n    }\n    _setToQueue(socketMessage) {\n        this._queue.push(socketMessage);\n    }\n    _pushQueue() {\n        const queue = this._queue;\n        queue.forEach((socketMessage) => this._socketSend(socketMessage));\n        this._queue = [];\n    }\n}\nfunction getWebSocketUrl(_url, protocol, version) {\n    var _a, _b;\n    const url = _url.startsWith(\"https\")\n        ? _url.replace(\"https\", \"wss\")\n        : _url.startsWith(\"http\")\n            ? _url.replace(\"http\", \"ws\")\n            : _url;\n    const splitUrl = url.split(\"?\");\n    const params = isBrowser()\n        ? {\n            protocol,\n            version,\n            env: \"browser\",\n            host: ((_a = getLocation()) === null || _a === void 0 ? void 0 : _a.host) || \"\",\n        }\n        : {\n            protocol,\n            version,\n            env: ((_b = detectEnv()) === null || _b === void 0 ? void 0 : _b.name) || \"\",\n        };\n    const queryString = appendToQueryString(getQueryString(splitUrl[1] || \"\"), params);\n    return splitUrl[0] + \"?\" + queryString;\n}\nexport default SocketTransport;\n"]},"metadata":{},"sourceType":"module"}