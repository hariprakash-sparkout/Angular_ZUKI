{"ast":null,"code":"import _asyncToGenerator from \"/home/sparkout/Desktop/Hari/Sparkout/Angular/Angular_ZUKI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport function promisify(originalFn, thisArg) {\n  const promisifiedFunction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (...callArgs) {\n      return new Promise((resolve, reject) => {\n        const callback = (err, data) => {\n          if (err === null || typeof err === \"undefined\") {\n            reject(err);\n          }\n\n          resolve(data);\n        };\n\n        originalFn.apply(thisArg, [...callArgs, callback]);\n      });\n    });\n\n    return function promisifiedFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n  const message = error.message || \"Failed or Rejected Request\";\n  let code = -32000;\n\n  if (error && !error.code) {\n    switch (message) {\n      case \"Parse error\":\n        code = -32700;\n        break;\n\n      case \"Invalid request\":\n        code = -32600;\n        break;\n\n      case \"Method not found\":\n        code = -32601;\n        break;\n\n      case \"Invalid params\":\n        code = -32602;\n        break;\n\n      case \"Internal error\":\n        code = -32603;\n        break;\n\n      default:\n        code = -32000;\n        break;\n    }\n  }\n\n  const result = {\n    code,\n    message\n  };\n  return result;\n}","map":{"version":3,"sources":["/home/sparkout/Desktop/Hari/Sparkout/Angular/Angular_ZUKI/node_modules/@walletconnect/utils/dist/esm/payload.js"],"names":["promisify","originalFn","thisArg","promisifiedFunction","callArgs","Promise","resolve","reject","callback","err","data","apply","formatRpcError","error","message","code","result"],"mappings":";AAAA,OAAO,SAASA,SAAT,CAAmBC,UAAnB,EAA+BC,OAA/B,EAAwC;AAC3C,QAAMC,mBAAmB;AAAA,iCAAG,WAAO,GAAGC,QAAV,EAAuB;AAC/C,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,cAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5B,cAAID,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,WAAnC,EAAgD;AAC5CF,YAAAA,MAAM,CAACE,GAAD,CAAN;AACH;;AACDH,UAAAA,OAAO,CAACI,IAAD,CAAP;AACH,SALD;;AAMAT,QAAAA,UAAU,CAACU,KAAX,CAAiBT,OAAjB,EAA0B,CAAC,GAAGE,QAAJ,EAAcI,QAAd,CAA1B;AACH,OARM,CAAP;AASH,KAVwB;;AAAA,oBAAnBL,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAWA,SAAOA,mBAAP;AACH;AACD,OAAO,SAASS,cAAT,CAAwBC,KAAxB,EAA+B;AAClC,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAN,IAAiB,4BAAjC;AACA,MAAIC,IAAI,GAAG,CAAC,KAAZ;;AACA,MAAIF,KAAK,IAAI,CAACA,KAAK,CAACE,IAApB,EAA0B;AACtB,YAAQD,OAAR;AACI,WAAK,aAAL;AACIC,QAAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACJ,WAAK,iBAAL;AACIA,QAAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACJ,WAAK,kBAAL;AACIA,QAAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACJ,WAAK,gBAAL;AACIA,QAAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACJ,WAAK,gBAAL;AACIA,QAAAA,IAAI,GAAG,CAAC,KAAR;AACA;;AACJ;AACIA,QAAAA,IAAI,GAAG,CAAC,KAAR;AACA;AAlBR;AAoBH;;AACD,QAAMC,MAAM,GAAG;AACXD,IAAAA,IADW;AAEXD,IAAAA;AAFW,GAAf;AAIA,SAAOE,MAAP;AACH","sourcesContent":["export function promisify(originalFn, thisArg) {\n    const promisifiedFunction = async (...callArgs) => {\n        return new Promise((resolve, reject) => {\n            const callback = (err, data) => {\n                if (err === null || typeof err === \"undefined\") {\n                    reject(err);\n                }\n                resolve(data);\n            };\n            originalFn.apply(thisArg, [...callArgs, callback]);\n        });\n    };\n    return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n    const message = error.message || \"Failed or Rejected Request\";\n    let code = -32000;\n    if (error && !error.code) {\n        switch (message) {\n            case \"Parse error\":\n                code = -32700;\n                break;\n            case \"Invalid request\":\n                code = -32600;\n                break;\n            case \"Method not found\":\n                code = -32601;\n                break;\n            case \"Invalid params\":\n                code = -32602;\n                break;\n            case \"Internal error\":\n                code = -32603;\n                break;\n            default:\n                code = -32000;\n                break;\n        }\n    }\n    const result = {\n        code,\n        message,\n    };\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}